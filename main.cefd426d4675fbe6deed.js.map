{"version":3,"sources":["webpack:///./index.js","webpack:///./js/backdounTimer.js"],"names":["refs","dayRef","document","querySelector","hoursRef","minRef","secsRef","timerRef","addZero","value","String","padStart","selected","targetDate","Date","id","timerId","setInterval","time","days","Math","floor","hours","mins","secs","textContent","formatTime","now"],"mappings":"kHAAA,4B,mBCAA,MAAMA,EAAO,CACTC,OAAQC,SAASC,cAAe,uBAChCC,SAAUF,SAASC,cAAe,wBAClCE,OAAQH,SAASC,cAAe,uBAChCG,QAASJ,SAASC,cAAe,uBACjCI,SAAUL,SAASC,cAAc,YAE/B,OAAEF,EAAF,SAAUG,EAAV,OAAoBC,EAApB,QAA4BC,EAA5B,SAAqCC,GAAaP,EAElDQ,EAAWC,GACNC,OAAOD,GAAOE,SAAS,EAAG,KAelB,IAACC,EAAUC,EAAVD,EAQT,WARmBC,EAQP,IAAIC,KAAK,gBAXfF,KACbL,EAASQ,GAAKH,GAGdI,CAAQJ,GACRK,YAAY,KAfIC,KAChB,MAAMC,EAAOX,EAAQY,KAAKC,MAAMH,EAAO,QACjCI,EAAQd,EAAQY,KAAKC,MAAOH,EAAO,MAAR,OAC3BK,EAAOf,EAAQY,KAAKC,MAAOH,EAAO,KAAR,MAC1BM,EAAOhB,EAAQY,KAAKC,MAAOH,EAAO,IAAe,MACvDjB,EAAOwB,YAAcN,EACrBf,EAASqB,YAAcH,EACvBjB,EAAOoB,YAAcF,EACrBjB,EAAQmB,YAAcD,GASlBE,CADkBb,EAAaC,KAAKa,QAErC,O","file":"main.cefd426d4675fbe6deed.js","sourcesContent":["import './style/styles.css';\n// import './js/timer';\nimport './js/backdounTimer';","const refs = {\n    dayRef: document.querySelector(`[data-value='days']`),\n    hoursRef: document.querySelector(`[data-value='hours']`),\n    minRef: document.querySelector(`[data-value='mins']`),\n    secsRef: document.querySelector(`[data-value='secs']`),\n    timerRef: document.querySelector('.timer')\n}\nconst { dayRef, hoursRef, minRef, secsRef, timerRef } = refs;\n\nconst addZero = (value) => {\n    return String(value).padStart(2, '0');\n};\nconst formatTime = (time) => {\n    const days = addZero(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = addZero(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = addZero(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = addZero(Math.floor((time % (1000 * 60)) / 1000));\n    dayRef.textContent = days;\n    hoursRef.textContent = hours;\n    minRef.textContent = mins;\n    secsRef.textContent = secs;\n};\nconst timerId = (selected) => {\n    timerRef.id = selected\n};\nconst startTimer = (selected, targetDate) => {\n    timerId(selected)\n    setInterval(() => {\n        const deltaTime = targetDate - Date.now()\n        formatTime(deltaTime)\n    }, 1000)\n\n};\nstartTimer('#timer-2', new Date('Jul 17, 2021'));"],"sourceRoot":""}